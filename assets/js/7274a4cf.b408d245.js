"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[730],{38570:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(70079);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,m=u["".concat(l,".").concat(d)]||u[d]||g[d]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},56923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(52203),i=(n(70079),n(38570));const o={sidebar_position:3},a="Logging",s={unversionedId:"getting-started/configuration/logging",id:"getting-started/configuration/logging",title:"Logging",description:"By default, HutchAgent logs to the console. This is sufficient in development situations. However, in production, it is more practical to capture the logs with centralised services like Seq.",source:"@site/docs/getting-started/configuration/logging.md",sourceDirName:"getting-started/configuration",slug:"/getting-started/configuration/logging",permalink:"/hutch-trefx/docs/getting-started/configuration/logging",draft:!1,editUrl:"https://github.com/health-informatics-uon/hutch-trefx/tree/main/website/docs/getting-started/configuration/logging.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Hutch Agent",permalink:"/hutch-trefx/docs/getting-started/configuration/agent"},next:{title:"WorkflowHub in a TRE",permalink:"/hutch-trefx/docs/getting-started/configuration/workflowhub-spoof"}},l={},p=[{value:"Configure <code>Seq</code> in <code>HutchAgent</code>",id:"configure-seq-in-hutchagent",level:2},{value:"<code>appsettings.json</code>",id:"appsettingsjson",level:3},{value:"Environment variables",id:"environment-variables",level:3},{value:".NET User Secrets",id:"net-user-secrets",level:3}],c={toc:p};function g(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"logging"},"Logging"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"HutchAgent")," logs to the console. This is sufficient in development situations. However, in production, it is more practical to capture the logs with centralised services like ",(0,i.kt)("a",{parentName:"p",href:"https://datalust.co/seq"},"Seq"),"."),(0,i.kt)("h2",{id:"configure-seq-in-hutchagent"},"Configure ",(0,i.kt)("inlineCode",{parentName:"h2"},"Seq")," in ",(0,i.kt)("inlineCode",{parentName:"h2"},"HutchAgent")),(0,i.kt)("p",null,"Logging settings come under ",(0,i.kt)("inlineCode",{parentName:"p"},"Serilog"),". To add ",(0,i.kt)("inlineCode",{parentName:"p"},"Seq")," select a method from the following examples that best suits your set-up."),(0,i.kt)("h3",{id:"appsettingsjson"},(0,i.kt)("inlineCode",{parentName:"h3"},"appsettings.json")),(0,i.kt)("p",null,"Add ",(0,i.kt)("inlineCode",{parentName:"p"},'"Serilog.Sinks.Seq"')," to ",(0,i.kt)("inlineCode",{parentName:"p"},"Using"),", like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'/// ...\n"Using": [\n  /// ...\n  "Serilog.Sinks.Seq"\n]\n/// ...\n')),(0,i.kt)("p",null,"... and add the ",(0,i.kt)("inlineCode",{parentName:"p"},"Seq")," settings object to ",(0,i.kt)("inlineCode",{parentName:"p"},'"WriteTo"'),", like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'/// ...\n"WriteTo": [\n  /// ...\n  {\n    "Name": "Seq",\n    "Args": {\n      "serverUrl": "http://localhost:5341"\n    }\n  }\n]\n/// ...\n')),(0,i.kt)("p",null,"Feel free to substitute the ",(0,i.kt)("inlineCode",{parentName:"p"},"serverUrl")," setting with your hosting location."),(0,i.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,i.kt)("p",null,"Add the sink to ",(0,i.kt)("inlineCode",{parentName:"p"},"Using"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Serilog__Using__X=Serilog.Sinks.Seq\n")),(0,i.kt)("p",null,"where X is the ",(0,i.kt)("strong",{parentName:"p"},"current")," number of sinks + 1."),(0,i.kt)("p",null,"Now add a configuration object to ",(0,i.kt)("inlineCode",{parentName:"p"},"WriteTo"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Serilog__WriteTo__X__Name=Seq\nSerilog__WriteTo__X__Args__serverUrl=http://localhost:5341\n")),(0,i.kt)("p",null,"again, where X is the ",(0,i.kt)("strong",{parentName:"p"},"current")," number of sinks + 1."),(0,i.kt)("h3",{id:"net-user-secrets"},".NET User Secrets"),(0,i.kt)("p",null,"Add the sink to ",(0,i.kt)("inlineCode",{parentName:"p"},"Using"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'"Serilog:Using:X": "Serilog.Sinks.Seq"\n')),(0,i.kt)("p",null,"where X is the ",(0,i.kt)("strong",{parentName:"p"},"current")," number of sinks + 1."),(0,i.kt)("p",null,"Now add a configuration object to ",(0,i.kt)("inlineCode",{parentName:"p"},"WriteTo"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'"Serilog:WriteTo:X:Name": "Seq",\n"Serilog:WriteTo:X:Args:serverUrl": "http://localhost:5341"\n')),(0,i.kt)("p",null,"again, where X is the ",(0,i.kt)("strong",{parentName:"p"},"current")," number of sinks + 1."),(0,i.kt)("p",null,"Other options for ",(0,i.kt)("inlineCode",{parentName:"p"},"Args")," can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/datalust/serilog-sinks-seq"},"here"),"."))}g.isMDXComponent=!0}}]);